--> IF
if condition
then
  statements
[elif condition
  then statements...]
[else
fi
sample:
if [ "$var_test" == "1" ]
then
echo $var_test
else 
echo "erro"
fi

--> For type in list

for name [in list]
do
statements that can use $name
done
sampple:
for i in $(ls ./)
do 
  echo $i
done

--> For all in one line
for (( initialisation ; ending condition ; update ))
do
  statements...
done
sample:
for ((i=1;i<=11;i++))
do
        echo "$i"
done

--> more For
*Basic for loop
for i in /etc/rc.*; do
  echo "$i"
done
*C-like for loop
for ((i = 0 ; i < 100 ; i++)); do
  echo "$i"
done
*Ranges
for i in {1..5}; do
    echo "Welcome $i"
done
*With step size
for i in {5..50..5}; do
    echo "Welcome $i"
done
*Reading lines
while read -r line; do
  echo "$line"
done <file.txt

--> Case (menu)
case expression in
  pattern1 )
    statements ;;
  pattern2 )
    statements ;;
  ...
esac

--> while (condition is true)
while condition; do
  statements
done
sample: 
var_count=1
while [ $var_count -lt 11 ]
do
  echo $var_count
  var_count=$((var_count+1))
done

--> until (condition is false)
until condition; do
  statements
done
sample:
var_count=1
until [ $var_count == 10 ]
do
  echo $var_count
  var_count=$((var_count+1))
done

--> select (menu)
select name [in list]
do
  statements that can use $name
done
sample: 
select character in Sheldon Leonard Penny Howard Raj
do
    echo "Selected character: $character"
done

--> select + case (sample)
select opt in add subtract multiply divide quit; do

  case $opt in
    add)
      read -p "Enter the first number: " n1
      read -p "Enter the second number: " n2
      echo "$n1 + $n2 = $(($n1+$n2))"
      ;;
    subtract)
      read -p "Enter the first number: " n1
      read -p "Enter the second number: " n2
      echo "$n1 - $n2 = $(($n1-$n2))"
      ;;
    multiply)
      read -p "Enter the first number: " n1
      read -p "Enter the second number: " n2
      echo "$n1 * $n2 = $(($n1*$n2))"
      ;;
    divide)
      read -p "Enter the first number: " n1
      read -p "Enter the second number: " n2
      echo "$n1 / $n2 = $(($n1/$n2))"
      ;;
    quit)
      break
      ;;
    *) 
      echo "Invalid option $REPLY"
      ;;
  esac
done

--> More Tips and Tips

#!/bin/bash
if [ 1 == 2 ]
then
echo "teste"
else
echo "alex"
fi

a=1
b=2
if [[ a > b ]]
then
echo "A maior do que B"
elif [[ b > a ]]
then
echo "B maior do que A"
else
echo "B igual a A"


echo "Script para comparar dois números:"
echo "Digite um número entre 0, 1 e 2:"
read a
case $a in
    "0") echo "zero";;
    "1") echo "um - ímpar";;
    "2") echo "dois - par";;
esac

#!/bin/bash
echo "digite o primeiro número:"
read um
echo "digite o segundo número:"
read dois
if [[ $um > $dois ]]
then
echo "1 maior que 2"
elif [[ $um < $dois ]]
then
echo "2 maior que 1"
else [[ $um == $dois ]]
echo "1 igual a 2"
fi

#!/bin/bash
for var_file in $1; do md5sum $var_file; done
if [[ $? == 0 ]]
then
echo "Sucesso!"
else
echo "erro no comando"
fi

#!/bin/bash
var_dt=$(date '+Data_%d_%m_%Y_Hora_%H_%M_%S')
echo "script name is $0"
ping $1 -c $2 -R | while read pong; do echo "$(date): $pong";done | tee $1_$var_dt.txt

#!/bin/bash
tempo=$1
while [ $tempo -le 10 ]
do
ping -c $tempo 192.168.0.1
exit 0
done




